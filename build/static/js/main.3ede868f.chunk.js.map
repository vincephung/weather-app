{"version":3,"sources":["FormDisplay.js","WeatherCard.js","ChangeBackground.js","DisplayError.js","FormContainer.js","App.js","index.js"],"names":["FormDisplay","props","useState","location","setLocation","onSubmit","e","preventDefault","getWeatherData","type","name","placeholder","value","onChange","target","WeatherCard","initialTemp","Math","trunc","data","main","temp","temperature","setTemp","scale","setScale","state","country","sys","weatherType","weather","weatherDescription","description","weatherIconUrl","icon","className","alt","src","checked","ChangeBackground","body","document","style","background","backgroundSize","DisplayError","FormContainer","weatherData","setWeatherData","error","setError","a","url","fetch","mode","response","ok","json","Error","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3ede868f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './form.css';\n\nconst FormDisplay = (props) => {\n  const [location, setLocation] = useState('');\n\n  const handleChange = (e) => {\n    setLocation(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.getWeatherData(location);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"city\"\n          placeholder=\"Enter City\"\n          value={location}\n          onChange={handleChange}\n        ></input>\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormDisplay;\n","import React, { useState } from 'react';\nimport './weatherCard.css';\n\nconst WeatherCard = (props) => {\n  let initialTemp = Math.trunc(props.data.main.temp - 273.1); // default temperature is in celcius\n  const [temperature, setTemp] = useState(initialTemp);\n  const [scale, setScale] = useState('C');\n  let state = props.data.name;\n  let country = props.data.sys.country;\n  let location = `${state}, ${country}`;\n  let weatherType = props.data.weather[0].main;\n  let weatherDescription = props.data.weather[0].description;\n  let weatherIconUrl = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}.png`;\n\n  const convertTemp = (e) => {\n    let checked = e.target.checked;\n\n    let temp = checked ? initialTemp : temperature * (9 / 5) + 32;\n    temp = Math.trunc(temp);\n    setTemp(temp);\n    scale === 'C' ? setScale('F') : setScale('C');\n  };\n\n  return (\n    <div className=\"card\">\n      <h1 className=\"location\">{location}</h1>\n      <div className=\"temperature\">\n        <img alt=\"weather-icon\" src={weatherIconUrl}></img>\n        <div className=\"description\">\n          <h3>{`${temperature} °${scale}`}</h3>\n          <h4>{weatherType}</h4>\n          <h4>{weatherDescription}</h4>\n        </div>\n      </div>\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={convertTemp}\n          checked={scale === 'C'}\n        ></input>\n        °{scale}\n        <span className=\"slider\"></span>\n      </label>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n","const ChangeBackground = (props) => {\n  let weatherDescription = props.data.weather[0].main;\n\n  let body = document.body;\n  switch (weatherDescription) {\n    case 'Clear':\n      body.style.background =\n        \"url('https://images.financialexpress.com/2020/04/sky660.jpg') no-repeat\";\n      body.style.backgroundSize = 'cover';\n      break;\n    case 'Clouds':\n      body.style.background =\n        \"url('https://images.pexels.com/photos/912110/pexels-photo-912110.jpeg?auto=compress&cs=tinysrgb&dpr=1') no-repeat\";\n      body.style.backgroundSize = 'cover';\n      break;\n    case 'Drizzle':\n    case 'Rain':\n      body.style.background =\n        \"url('https://i.ytimg.com/vi/Q1GTZ6JSSFk/maxresdefault.jpg') no-repeat\";\n      body.style.backgroundSize = 'cover';\n      break;\n    case 'Thunderstorm':\n      body.style.background =\n        \"url('https://images.unsplash.com/photo-1472145246862-b24cf25c4a36?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb') no-repeat\";\n      body.style.backgroundSize = 'cover';\n      break;\n    case 'Snow':\n      body.style.background =\n        \"url('https://i.pinimg.com/originals/71/f7/ed/71f7ed7f43b268b4507d7bb8dee672e1.jpg') no-repeat\";\n      body.style.backgroundSize = 'cover';\n      break;\n    case 'Mist':\n      body.style.background =\n        \"url('https://ak.picdn.net/shutterstock/videos/19585312/thumb/1.jpg') no-repeat\";\n      body.style.backgroundSize = 'cover';\n      break;\n    default:\n      break;\n  }\n  return null;\n};\n\nexport default ChangeBackground;\n","import React from 'react';\n\nconst DisplayError = () => {\n  return (\n    <div>\n      <h1>Invalid input: Please input a valid city!</h1>\n    </div>\n  );\n};\n\nexport default DisplayError;\n","import React, { useState, useEffect } from 'react';\nimport FormDisplay from './FormDisplay';\nimport WeatherCard from './WeatherCard';\nimport ChangeBackground from './ChangeBackground';\nimport DisplayError from './DisplayError';\nimport './form.css';\n\nconst FormContainer = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleError = () => {\n    setError(true);\n    setWeatherData(null);\n  };\n\n  const getWeatherData = async (location) => {\n    try {\n      setError(false);\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=09cb87e3b19945bb6949563cd21ace23`;\n      const response = await fetch(url, { mode: 'cors' });\n\n      if (response.ok) {\n        const data = await response.json();\n        setWeatherData(data);\n        return data;\n      } else {\n        handleError();\n      }\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <FormDisplay getWeatherData={getWeatherData} />\n      {weatherData !== null ? <WeatherCard data={weatherData} /> : null}\n      {weatherData !== null ? <ChangeBackground data={weatherData} /> : null}\n      {error && !weatherData ? <DisplayError /> : null}\n    </div>\n  );\n};\n\nexport default FormContainer;\n","import React from 'react';\nimport FormContainer from './FormContainer';\n\ndocument.body.style.background = '#c5e2f7';\n\nconst App = () => <FormContainer />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}