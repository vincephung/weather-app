{"ast":null,"code":"var _jsxFileName = \"/home/vincephung/Desktop/the_oden_project/weather-app/src/WeatherCard.js\";\nimport React, { useState } from 'react';\nimport './weatherCard.css';\n\nconst WeatherCard = props => {\n  let initialTemp = Math.trunc(props.data.main.temp - 273.1); // default temperature is in celcius\n\n  const [temperature, setTemp] = useState(initialTemp);\n  const [scale, setScale] = useState('C');\n  let state = props.data.name;\n  let country = props.data.sys.country;\n  let location = `${state}, ${country}`;\n  let weatherType = props.data.weather[0].main;\n  let weatherDescription = props.data.weather[0].description;\n  let weatherIconUrl = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}.png`;\n\n  const convertTemp = e => {\n    let checked = e.target.checked;\n    let temp = checked ? temperature * (9 / 5) + 32 : (temperature - 32) * (5 / 9);\n    temp = Math.trunc(temp);\n    setTemp(temp);\n    scale === 'C' ? setScale('F') : setScale('C');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, location), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"weather-icon\",\n    src: weatherIconUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, `${temperature} °${scale}`), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, weatherType), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, weatherDescription))), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: convertTemp,\n    checked: scale === 'C',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), \"\\xB0\", scale, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default WeatherCard;","map":{"version":3,"sources":["/home/vincephung/Desktop/the_oden_project/weather-app/src/WeatherCard.js"],"names":["React","useState","WeatherCard","props","initialTemp","Math","trunc","data","main","temp","temperature","setTemp","scale","setScale","state","name","country","sys","location","weatherType","weather","weatherDescription","description","weatherIconUrl","icon","convertTemp","e","checked","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './weatherCard.css';\n\nconst WeatherCard = (props) => {\n  let initialTemp = Math.trunc(props.data.main.temp - 273.1); // default temperature is in celcius\n  const [temperature, setTemp] = useState(initialTemp);\n  const [scale, setScale] = useState('C');\n  let state = props.data.name;\n  let country = props.data.sys.country;\n  let location = `${state}, ${country}`;\n  let weatherType = props.data.weather[0].main;\n  let weatherDescription = props.data.weather[0].description;\n  let weatherIconUrl = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}.png`;\n\n  const convertTemp = (e) => {\n    let checked = e.target.checked;\n\n    let temp = checked\n      ? temperature * (9 / 5) + 32\n      : (temperature - 32) * (5 / 9);\n    temp = Math.trunc(temp);\n    setTemp(temp);\n    scale === 'C' ? setScale('F') : setScale('C');\n  };\n\n  return (\n    <div className=\"card\">\n      <h1 className=\"location\">{location}</h1>\n      <div className=\"temperature\">\n        <img alt=\"weather-icon\" src={weatherIconUrl}></img>\n        <div className=\"description\">\n          <h3>{`${temperature} °${scale}`}</h3>\n          <h4>{weatherType}</h4>\n          <h4>{weatherDescription}</h4>\n        </div>\n      </div>\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={convertTemp}\n          checked={scale === 'C'}\n        ></input>\n        °{scale}\n        <span className=\"slider\"></span>\n      </label>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}