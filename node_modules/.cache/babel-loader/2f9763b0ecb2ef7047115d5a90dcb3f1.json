{"ast":null,"code":"var _jsxFileName = \"/home/vincephung/Desktop/the_oden_project/weather-app/src/WeatherCard.js\";\nimport React, { useState } from 'react'; //displays the weather\n\nconst WeatherCard = props => {\n  const [temperature, setTemp] = useState(props.data.main.temp - 273.1); // default temperature is in celcius\n\n  const [scale, setScale] = useState('celcius');\n  let location = props.data.name; // let temperature = props.data.main.temp;\n\n  let weatherType = props.data.weather[0].main;\n  let weatherDescription = props.data.weather[0].description;\n  let weatherIconUrl = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}.png`;\n\n  const convertTemp = temp => {\n    let fahrenheit = (temp - 273.15) * (9 / 5) + 32;\n    let celcius = temp - 273.1;\n    let temps = [fahrenheit, celcius]; // This could be state instead\n\n    return Math.floor(fahrenheit * 100) / 100;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, location), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"weather-icon\",\n    src: weatherIconUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, `${convertTemp(temperature)} °F`), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, weatherType), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, weatherDescription), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: convertTemp,\n    checked: scale === 'celcius',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default WeatherCard;","map":{"version":3,"sources":["/home/vincephung/Desktop/the_oden_project/weather-app/src/WeatherCard.js"],"names":["React","useState","WeatherCard","props","temperature","setTemp","data","main","temp","scale","setScale","location","name","weatherType","weather","weatherDescription","description","weatherIconUrl","icon","convertTemp","fahrenheit","celcius","temps","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBJ,QAAQ,CAACE,KAAK,CAACG,IAAN,CAAWC,IAAX,CAAgBC,IAAhB,GAAuB,KAAxB,CAAvC,CAD6B,CAC0C;;AACvE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,SAAD,CAAlC;AACA,MAAIU,QAAQ,GAAGR,KAAK,CAACG,IAAN,CAAWM,IAA1B,CAH6B,CAI7B;;AACA,MAAIC,WAAW,GAAGV,KAAK,CAACG,IAAN,CAAWQ,OAAX,CAAmB,CAAnB,EAAsBP,IAAxC;AACA,MAAIQ,kBAAkB,GAAGZ,KAAK,CAACG,IAAN,CAAWQ,OAAX,CAAmB,CAAnB,EAAsBE,WAA/C;AACA,MAAIC,cAAc,GAAI,oCAAmCd,KAAK,CAACG,IAAN,CAAWQ,OAAX,CAAmB,CAAnB,EAAsBI,IAAK,MAApF;;AAEA,QAAMC,WAAW,GAAIX,IAAD,IAAU;AAC5B,QAAIY,UAAU,GAAG,CAACZ,IAAI,GAAG,MAAR,KAAmB,IAAI,CAAvB,IAA4B,EAA7C;AACA,QAAIa,OAAO,GAAGb,IAAI,GAAG,KAArB;AACA,QAAIc,KAAK,GAAG,CAACF,UAAD,EAAaC,OAAb,CAAZ,CAH4B,CAGO;;AAEnC,WAAOE,IAAI,CAACC,KAAL,CAAWJ,UAAU,GAAG,GAAxB,IAA+B,GAAtC;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,QAAL,CADF,eAEE;AAAK,IAAA,GAAG,EAAC,cAAT;AAAwB,IAAA,GAAG,EAAEM,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,GAAEE,WAAW,CAACf,WAAD,CAAc,KAAjC,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKS,WAAL,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,kBAAL,CALF,eAME;AAAO,IAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,EAAEI,WAFZ;AAGE,IAAA,OAAO,EAAEV,KAAK,KAAK,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CANF,CADF;AAiBD,CAlCD;;AAoCA,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react';\n//displays the weather\nconst WeatherCard = (props) => {\n  const [temperature, setTemp] = useState(props.data.main.temp - 273.1); // default temperature is in celcius\n  const [scale, setScale] = useState('celcius');\n  let location = props.data.name;\n  // let temperature = props.data.main.temp;\n  let weatherType = props.data.weather[0].main;\n  let weatherDescription = props.data.weather[0].description;\n  let weatherIconUrl = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}.png`;\n\n  const convertTemp = (temp) => {\n    let fahrenheit = (temp - 273.15) * (9 / 5) + 32;\n    let celcius = temp - 273.1;\n    let temps = [fahrenheit, celcius]; // This could be state instead\n\n    return Math.floor(fahrenheit * 100) / 100;\n  };\n\n  return (\n    <div className=\"card\">\n      <h1>{location}</h1>\n      <img alt=\"weather-icon\" src={weatherIconUrl}></img>\n      <h3>{`${convertTemp(temperature)} °F`}</h3>\n      <h4>{weatherType}</h4>\n      <h4>{weatherDescription}</h4>\n      <label class=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={convertTemp}\n          checked={scale === 'celcius'}\n        ></input>\n        <span class=\"slider\"></span>\n      </label>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}