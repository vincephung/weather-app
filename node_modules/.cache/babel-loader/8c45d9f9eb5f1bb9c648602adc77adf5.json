{"ast":null,"code":"var _jsxFileName = \"/home/vincephung/Desktop/the_oden_project/weather-app/src/FormContainer.js\";\nimport React, { useState } from 'react';\nimport FormDisplay from './FormDisplay';\nimport WeatherCard from './WeatherCard'; //Creates a form that user fills out location\n\nconst FormContainer = () => {\n  const [weatherData, setWeatherData] = useState(null);\n\n  const getWeatherData = async location => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=09cb87e3b19945bb6949563cd21ace23`; //need to change philadelphia to STATE\n\n      const response = await fetch(url, {\n        mode: 'cors'\n      });\n      const data = await response.json();\n      setWeatherData(data);\n      return data; // const temp = data.main.temp;\n      //console.log(temp);\n    } catch (err) {\n      // need to fix this up more\n      throw new Error(err);\n    }\n  };\n\n  const displayForm = () => {\n    return weatherData !== null ? /*#__PURE__*/React.createElement(WeatherCard, {\n      data: weatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }\n    }) : null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormDisplay, {\n    getWeatherData: getWeatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), weatherData !== null ? /*#__PURE__*/React.createElement(WeatherCard, {\n    data: weatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 31\n    }\n  }) : null);\n};\n\nexport default FormContainer;","map":{"version":3,"sources":["/home/vincephung/Desktop/the_oden_project/weather-app/src/FormContainer.js"],"names":["React","useState","FormDisplay","WeatherCard","FormContainer","weatherData","setWeatherData","getWeatherData","location","url","response","fetch","mode","data","json","err","Error","displayForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMM,cAAc,GAAG,MAAOC,QAAP,IAAoB;AACzC,QAAI;AACF,YAAMC,GAAG,GAAI,qDAAoDD,QAAS,yCAA1E,CADE,CACkH;;AACpH,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAN,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAR,MAAAA,cAAc,CAACO,IAAD,CAAd;AACA,aAAOA,IAAP,CALE,CAMF;AACA;AACD,KARD,CAQE,OAAOE,GAAP,EAAY;AACZ;AACA,YAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,GAbD;;AAeA,QAAME,WAAW,GAAG,MAAM;AACxB,WAAOZ,WAAW,KAAK,IAAhB,gBAAuB,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAA4D,IAAnE;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,cAAc,EAAEE,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,WAAW,KAAK,IAAhB,gBAAuB,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,GAA4D,IAF/D,CADF;AAMD,CA5BD;;AA8BA,eAAeD,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport FormDisplay from './FormDisplay';\nimport WeatherCard from './WeatherCard';\n//Creates a form that user fills out location\nconst FormContainer = () => {\n  const [weatherData, setWeatherData] = useState(null);\n\n  const getWeatherData = async (location) => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=09cb87e3b19945bb6949563cd21ace23`; //need to change philadelphia to STATE\n      const response = await fetch(url, { mode: 'cors' });\n      const data = await response.json();\n      setWeatherData(data);\n      return data;\n      // const temp = data.main.temp;\n      //console.log(temp);\n    } catch (err) {\n      // need to fix this up more\n      throw new Error(err);\n    }\n  };\n\n  const displayForm = () => {\n    return weatherData !== null ? <WeatherCard data={weatherData} /> : null;\n  };\n\n  return (\n    <div>\n      <FormDisplay getWeatherData={getWeatherData} />\n      {weatherData !== null ? <WeatherCard data={weatherData} /> : null}\n    </div>\n  );\n};\n\nexport default FormContainer;\n"]},"metadata":{},"sourceType":"module"}