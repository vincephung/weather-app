{"ast":null,"code":"import _slicedToArray from\"/home/vincephung/Desktop/the_oden_project/weather-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./weatherCard.css';var WeatherCard=function WeatherCard(props){var initialTemp=Math.trunc(props.data.main.temp-273.1);// default temperature is in celcius\nvar _useState=useState(initialTemp),_useState2=_slicedToArray(_useState,2),temperature=_useState2[0],setTemp=_useState2[1];var _useState3=useState('C'),_useState4=_slicedToArray(_useState3,2),scale=_useState4[0],setScale=_useState4[1];var state=props.data.name;var country=props.data.sys.country;var location=\"\".concat(state,\", \").concat(country);var weatherType=props.data.weather[0].main;var weatherDescription=props.data.weather[0].description;var weatherIconUrl=\"http://openweathermap.org/img/wn/\".concat(props.data.weather[0].icon,\".png\");var convertTemp=function convertTemp(e){var checked=e.target.checked;var temp=checked?initialTemp:temperature*(9/5)+32;temp=Math.trunc(temp);setTemp(temp);scale==='C'?setScale('F'):setScale('C');};return/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"location\"},location),/*#__PURE__*/React.createElement(\"div\",{className:\"temperature\"},/*#__PURE__*/React.createElement(\"img\",{alt:\"weather-icon\",src:weatherIconUrl}),/*#__PURE__*/React.createElement(\"div\",{className:\"description\"},/*#__PURE__*/React.createElement(\"h3\",null,\"\".concat(temperature,\" \\xB0\").concat(scale)),/*#__PURE__*/React.createElement(\"h4\",null,weatherType),/*#__PURE__*/React.createElement(\"h4\",null,weatherDescription))),/*#__PURE__*/React.createElement(\"label\",{className:\"switch\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",onChange:convertTemp,checked:scale==='C'}),\"\\xB0\",scale,/*#__PURE__*/React.createElement(\"span\",{className:\"slider\"})));};export default WeatherCard;","map":{"version":3,"sources":["/home/vincephung/Desktop/the_oden_project/weather-app/src/WeatherCard.js"],"names":["React","useState","WeatherCard","props","initialTemp","Math","trunc","data","main","temp","temperature","setTemp","scale","setScale","state","name","country","sys","location","weatherType","weather","weatherDescription","description","weatherIconUrl","icon","convertTemp","e","checked","target"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,mBAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAIC,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgBC,IAAhB,CAAuB,KAAlC,CAAlB,CAA4D;AAD/B,cAEER,QAAQ,CAACG,WAAD,CAFV,wCAEtBM,WAFsB,eAETC,OAFS,8BAGHV,QAAQ,CAAC,GAAD,CAHL,yCAGtBW,KAHsB,eAGfC,QAHe,eAI7B,GAAIC,CAAAA,KAAK,CAAGX,KAAK,CAACI,IAAN,CAAWQ,IAAvB,CACA,GAAIC,CAAAA,OAAO,CAAGb,KAAK,CAACI,IAAN,CAAWU,GAAX,CAAeD,OAA7B,CACA,GAAIE,CAAAA,QAAQ,WAAMJ,KAAN,cAAgBE,OAAhB,CAAZ,CACA,GAAIG,CAAAA,WAAW,CAAGhB,KAAK,CAACI,IAAN,CAAWa,OAAX,CAAmB,CAAnB,EAAsBZ,IAAxC,CACA,GAAIa,CAAAA,kBAAkB,CAAGlB,KAAK,CAACI,IAAN,CAAWa,OAAX,CAAmB,CAAnB,EAAsBE,WAA/C,CACA,GAAIC,CAAAA,cAAc,4CAAuCpB,KAAK,CAACI,IAAN,CAAWa,OAAX,CAAmB,CAAnB,EAAsBI,IAA7D,QAAlB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzB,GAAIC,CAAAA,OAAO,CAAGD,CAAC,CAACE,MAAF,CAASD,OAAvB,CAEA,GAAIlB,CAAAA,IAAI,CAAGkB,OAAO,CAAGvB,WAAH,CAAiBM,WAAW,EAAI,EAAI,CAAR,CAAX,CAAwB,EAA3D,CACAD,IAAI,CAAGJ,IAAI,CAACC,KAAL,CAAWG,IAAX,CAAP,CACAE,OAAO,CAACF,IAAD,CAAP,CACAG,KAAK,GAAK,GAAV,CAAgBC,QAAQ,CAAC,GAAD,CAAxB,CAAgCA,QAAQ,CAAC,GAAD,CAAxC,CACD,CAPD,CASA,mBACE,2BAAK,SAAS,CAAC,MAAf,eACE,0BAAI,SAAS,CAAC,UAAd,EAA0BK,QAA1B,CADF,cAEE,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,GAAG,CAAC,cAAT,CAAwB,GAAG,CAAEK,cAA7B,EADF,cAEE,2BAAK,SAAS,CAAC,aAAf,eACE,wCAAQb,WAAR,iBAAwBE,KAAxB,EADF,cAEE,8BAAKO,WAAL,CAFF,cAGE,8BAAKE,kBAAL,CAHF,CAFF,CAFF,cAUE,6BAAO,SAAS,CAAC,QAAjB,eACE,6BACE,IAAI,CAAC,UADP,CAEE,QAAQ,CAAEI,WAFZ,CAGE,OAAO,CAAEb,KAAK,GAAK,GAHrB,EADF,QAMIA,KANJ,cAOE,4BAAM,SAAS,CAAC,QAAhB,EAPF,CAVF,CADF,CAsBD,CA1CD,CA4CA,cAAeV,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport './weatherCard.css';\n\nconst WeatherCard = (props) => {\n  let initialTemp = Math.trunc(props.data.main.temp - 273.1); // default temperature is in celcius\n  const [temperature, setTemp] = useState(initialTemp);\n  const [scale, setScale] = useState('C');\n  let state = props.data.name;\n  let country = props.data.sys.country;\n  let location = `${state}, ${country}`;\n  let weatherType = props.data.weather[0].main;\n  let weatherDescription = props.data.weather[0].description;\n  let weatherIconUrl = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}.png`;\n\n  const convertTemp = (e) => {\n    let checked = e.target.checked;\n\n    let temp = checked ? initialTemp : temperature * (9 / 5) + 32;\n    temp = Math.trunc(temp);\n    setTemp(temp);\n    scale === 'C' ? setScale('F') : setScale('C');\n  };\n\n  return (\n    <div className=\"card\">\n      <h1 className=\"location\">{location}</h1>\n      <div className=\"temperature\">\n        <img alt=\"weather-icon\" src={weatherIconUrl}></img>\n        <div className=\"description\">\n          <h3>{`${temperature} °${scale}`}</h3>\n          <h4>{weatherType}</h4>\n          <h4>{weatherDescription}</h4>\n        </div>\n      </div>\n      <label className=\"switch\">\n        <input\n          type=\"checkbox\"\n          onChange={convertTemp}\n          checked={scale === 'C'}\n        ></input>\n        °{scale}\n        <span className=\"slider\"></span>\n      </label>\n    </div>\n  );\n};\n\nexport default WeatherCard;\n"]},"metadata":{},"sourceType":"module"}